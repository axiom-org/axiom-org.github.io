{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"Here Is Some Lorem Ipsum","section":"lorem-ipsum"},"html":"<p>Blah blobbity blah</p>"}},{"node":{"frontmatter":{"title":"Here Is Some Morem Ipsum","section":"morem-ipsum"},"html":"<p>Hum diddly hum</p>"}},{"node":{"frontmatter":{"title":"Signing Up","section":"start"},"html":"<p>The Axiom system stores data in two different ways. The\nblockchain is replicated among every machine running\nAxiom. Storage space there is limited, but it is very\nreliable. Account data, like public keys to validate\nusers, and balances indicating how much cryptocurrency is\nowned by each account, is kept on the blockchain.</p>\n<p>File storage, on the other hand, is not replicated among\nevery machine running Axiom. Files stored on Axiom will\nonly be replicated to a few different machines. Only hash\nvalues of file content will be stored on the blockchain.</p>\n<p>To store any data in Axiom, you'll need to acquire some\ncryptocurrency, to pay for storage. To make this easier\nduring the beta period, we have a faucet set up to give\nout a small amount of currency to use for development.</p>\n<p>To sign up, first\n<a href=\"https://axiom.org/newsletter\">register your email here</a>.\nThen run this command:</p>\n<pre><code class=\"language-bash\">axiom signup youremail@example.com\n</code></pre>\n<p>You will have to enter a token that was emailed to you, so\nplease use a legitimate email address.</p>\n<p>The signup command will log in the CLI and generate a secure\npassphrase for you. Keep this somewhere secure.</p>\n<p>Once you complete the signup command, you should have\nenough money in your account to pay for the storage used\nin application development. To check your account balance,\nrun:</p>\n<pre><code class=\"language-bash\">axiom status\n</code></pre>\n<p>Log in using the passphrase that the <code>signup</code> command generated.\nYou should see output that displays a balance greater than\nzero. Congratulations, you now own some of the Axiom cryptocurrency!</p>"}},{"node":{"frontmatter":{"title":"Installing the CLI","section":"start"},"html":"<p>There are several different ways to interact with Axiom.\nServers running the Axiom blockchain and hosting Axiom\nfiles interact with each other through the wire protocol.\nApplication code typically interacts with Axiom through\nthe JavaScript Axiom client. During the development\nprocess, the most convenient way to interact with Axiom is\ntypically through the CLI.</p>\n<p>The CLI is tested on OS X and Linux. It might also work in Windows.</p>\n<p>You can install the CLI using <a href=\"https://www.npmjs.com/get-npm\">npm</a> or\n<a href=\"https://yarnpkg.com/\">yarn</a>:</p>\n<pre><code class=\"language-bash\">npm install -g axiom-cli\n</code></pre>\n<pre><code class=\"language-bash\">yarn global add axiom-cli\n</code></pre>"}},{"node":{"frontmatter":{"title":"Creating a Bucket","section":"start"},"html":"<p>To understand file storage on Axiom, it is helpful to understand\nthe concepts of buckets and hosting providers. An Axiom bucket is similar to\nan Amazon S3 bucket. A bucket can hold many files, and a user can own\nmany buckets. Each bucket has a capacity for how many files it can\nstore. One of your buckets could hold the static content for a web\napplication you are deploying, or it could hold the data for an\napplication you are using, or it could hold any sort of files you\nwould like to keep in decentralized storage.</p>\n<p>Data on the blockchain is replicated among every\nmachine running the blockchain. Data in a bucket is\nonly replicated among a few different hosting providers. This\nmakes it relatively inexpensive to store data in a bucket. With the\ndeveloper faucet, you should have enough to pay for about 100 megabytes\nof bucket storage.</p>\n<p>Let's make a bucket. Pick a unique name like\n\"my-cool-example\". Names are unique, so if you pick this exact one it\nprobably won't work because someone else will have gone through the\nexample.</p>\n<p>First, we have to create a new bucket. Let's pick a size of 1 megabyte\nbecause we're just using this as an example:</p>\n<pre><code class=\"language-bash\">axiom new-bucket my-cool-example 1\n</code></pre>\n<p>You should see output that looks like:</p>\n<pre><code>created bucket: www:my-cool-example\nallocated bucket to 1 provider\nallocated bucket to 2 providers\nallocated bucket to 3 providers\nallocated bucket to 4 providers\n</code></pre>\n<p>The <code>www</code> is the application tag for this bucket. It defaults to <code>www</code>\nwhich indicates that these files are intended for web access.</p>\n<p>The <code>new-bucket</code> command will automatically allocate the bucket to a\nfew hosting providers for you. Either the owner of a bucket or the\nhosting provider can deallocate the bucket at any time. As a developer, you\nmight want to reallocate a bucket elsewhere if a hosting provider is providing\na poor service level. As a hosting provider, you might want to\ndeallocate a bucket if you discover that it is hosting content that\nyou don't want to be hosting. Providers are never forced to host\nparticular files.</p>"}},{"node":{"frontmatter":{"title":"Introduction","section":"start"},"html":"<p>Axiom is a platform for building decentralized\napplications. It is also a cryptocurrency. If you've used\napplication platforms like Heroku or App Engine before,\nyou'll find parts of this familiar. If you've developed an\napplication using other cryptocurrencies like Ethereum\nbefore, you'll find different parts of this familiar.</p>\n<p>Currently, Axiom primarily targets web applications built\nin JavaScript. If you know how to make a simple website,\nyou'll be able to deploy a simple decentralized site. To\nbuild a more complicated application, you'll probably want\nto be familiar with a JavaScript framework like React or\nVue.</p>\n<p>The best way to learn about the Axiom system is\nto build a simple application on it. The \"Getting Started\"\nsection of this documentation will explain how to get an account set up and how to deploy\na simple static site to Axiom. The \"Building Applications\" section will explain how to build a\nslightly more complicated application. If you're\ninterested in learning more, the later sections will go\ninto more detail.</p>\n<p>Good luck!</p>"}},{"node":{"frontmatter":{"title":"Storing Files","section":"start"},"html":"<p>Now that you've created a bucket, you can upload files to that\nbucket. The simplest way to upload files is to use the <code>axiom upload</code>\ncommand to upload the contents of a local directory to a bucket:</p>\n<pre><code class=\"language-bash\">mkdir ~/my-cool-example\ncd ~/my-cool-example\necho \"hello decentralized world\" > index.html\naxiom upload . my-cool-example\n</code></pre>\n<p>When you run an upload, the files are transferred to the\nhosting providers via\n<a href=\"https://github.com/webtorrent/webtorrent\">WebTorrent</a>. The blockchain\nonly contains a single hash value encoded in a <a href=\"https://en.wikipedia.org/wiki/Magnet_URI_scheme\">magnet\nURI</a>, so that other\nusers can verify the contents of the bucket.</p>\n<p>Using the WebTorrent protocol for uploads and downloads means that the\ncosts of file hosting for providers don't scale linearly according to\nthe number of downloads, and can be amortized into the base cost of\nthe bucket. When you update the blockchain, you do have to pay a\nfee. The CLI by default attempts to use a 0-fee transaction. Since the\nblockchain uses the <a href=\"http://www.scs.stanford.edu/~dm/blog/simplified-scp.html\">Stellar Consensus\nProtocol</a>,\nhopefully these fees can stay very small over time even as blockchain\nusage increases.</p>\n<p>Now that we've uploaded content to a bucket, let's download it to make\nsure it's working.</p>\n<pre><code class=\"language-bash\">mkdir ~/testdir\ncd ~/testdir\naxiom download my-cool-example\n</code></pre>\n<p>You should be able to inspect the newly-created <code>~/testdir</code> directory\nto see a copy of your uploaded file.</p>"}},{"node":{"frontmatter":{"title":"CLI Overview","section":"cli"},"html":"<p>This section provides a reference to all of the CLI commands.</p>\n<p>The CLI is distributed through the <code>axiom-cli</code> npm package. You can\ninstall the CLI using <a href=\"https://www.npmjs.com/get-npm\">npm</a> or\n<a href=\"https://yarnpkg.com/\">yarn</a>:</p>\n<pre><code class=\"language-bash\">npm install -g axiom-cli\n</code></pre>\n<pre><code class=\"language-bash\">yarn global add axiom-cli\n</code></pre>\n<p>The general format of CLI commands is:</p>\n<pre><code class=\"language-bash\">axiom command-name argument-1 argument-2 [...]\n</code></pre>\n<p>If you run a command with no arguments, you'll get a brief usage\nmessage.</p>\n<p>Anything that can be done through the CLI can also be done through the\nHTTP API. The CLI source code is <a href=\"https://github.com/axiom-org/axiom/blob/master/ts/src/node/cli-main.ts\">on\nGitHub</a>\nso if some of its behavior is insufficiently documented, or it's\nunclear how to achieve it programmatically, you can check there.</p>"}},{"node":{"frontmatter":{"title":"axiom create-bucket","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom create-provider","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom dealloc","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom deallocate","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom delete-bucket","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom deploy","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom download","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom generate","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom get-bucket","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom get-buckets","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom get-provider","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom get-providers","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom login","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom logout","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom new-bucket","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom send","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom set-magnet","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom signup","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom upload","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom status","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom which","section":"cli"},"html":""}},{"node":{"frontmatter":{"title":"axiom alloc","section":"cli"},"html":"<pre><code class=\"language-bash\">axiom alloc [bucketName] [providerID]\n</code></pre>\n<p>Allocates a bucket to a particular provider.</p>\n<p>Usually you don't have to run this command because\n<a href=\"#docs-cli-axiom-new-bucket\">new-bucket</a> allocates a bucket for you. But if you\ncreated the bucket with <a href=\"#docs-cli-axiom-create-bucket\">create-bucket</a>\nit will start out with zero providers, so you have to allocate\nmanually. This is useful if there is a specific set of providers that\nyou would like to use.</p>\n<p>This command is a synonym of <a href=\"#docs-cli-axiom-allocate\">axiom\nallocate</a> for those who prefer to avoid typing.</p>"}},{"node":{"frontmatter":{"title":"axiom allocate","section":"cli"},"html":"<pre><code class=\"language-bash\">axiom allocate [bucketName] [providerID]\n</code></pre>\n<p>The long form of <a href=\"#docs-cli-axiom-alloc\">axiom alloc</a> for those who prefer spelling out whole words.</p>"}},{"node":{"frontmatter":{"title":"axiom config","section":"cli"},"html":"<p>Used in one of two ways:</p>\n<pre><code class=\"language-bash\">axiom config alpha\naxiom config local\n</code></pre>\n<p><code>axiom config</code> switches the CLI between using different networks. There are two Axiom networks that it can talk to. <code>alpha</code> is the developer network that you can deploy things to and have them be accessible to the outside world. <code>local</code> is a network that you are running on your own machine, for testing purposes.</p>\n<p>By default, this talks to the alpha network. You don't have to use this command unless you are working on the Axiom software itself.</p>"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}