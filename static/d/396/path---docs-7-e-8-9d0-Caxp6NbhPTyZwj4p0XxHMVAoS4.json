{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"API Overview","section":"api"},"html":"<p>This section provides a reference to all of the JavaScript API methods.</p>\n<p>The Axiom API is distributed through the <code class=\"language-text\">axiom-api</code> npm package. You can\ninstall it using <a href=\"https://www.npmjs.com/get-npm\">npm</a> or\n<a href=\"https://yarnpkg.com/\">yarn</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> axiom-api</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> axiom-api</code></pre></div>\n<p>We recommend that you use the <code class=\"language-text\">async/await</code> pattern when\ndeveloping Axiom applications. Most of the sample code will be written\nin that style. It isn't mandatory, though. When a\nfunction is documented as being <code class=\"language-text\">async</code>, and you call it without\nusing <code class=\"language-text\">await</code>, it will return a <code class=\"language-text\">Promise</code> object that you can use from\ncode that isn't using <code class=\"language-text\">async/await</code>.</p>\n<p>Currently, <code class=\"language-text\">axiom-api</code> only supports a browser environment. It's\ndesigned for running applications where the user is only authorizing\nspecific operations. However, anything that can be done through the JS\nAPI can also be done through HTTP or through the CLI. If you're\ninterested in this, you may find it\nuseful to check out <a href=\"https://github.com/axiom-org/axiom/blob/master/ts/src/browser/AxiomAPI.ts\">the API source\ncode</a>\nor <a href=\"https://github.com/axiom-org/axiom/blob/master/ts/src/node/cli-main.ts\">the CLI source code</a></p>"}},{"node":{"frontmatter":{"title":"axiom allocate","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom allocate <span class=\"token punctuation\">[</span>bucketName<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>providerID<span class=\"token punctuation\">]</span></code></pre></div>\n<p>The long form of <a href=\"#docs-cli-axiom-alloc\">axiom alloc</a> for those who prefer spelling out whole words.</p>"}},{"node":{"frontmatter":{"title":"axiom config","section":"cli"},"html":"<p>Used in one of two ways:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom config alpha\naxiom config local</code></pre></div>\n<p><code class=\"language-text\">axiom config</code> switches the CLI between using different networks. There are two Axiom networks that it can talk to. <code class=\"language-text\">alpha</code> is the developer network that you can deploy things to and have them be accessible to the outside world. <code class=\"language-text\">local</code> is a network that you are running on your own machine, for testing purposes.</p>\n<p>By default, this talks to the alpha network. You don't have to use\nthis command unless you are working on the Axiom software itself.</p>"}},{"node":{"frontmatter":{"title":"axiom create-bucket","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom create-bucket <span class=\"token punctuation\">[</span>bucketName<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>size<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Creates a new bucket, finds some providers with enough available space\nto host this bucket, and allocates the bucket to those providers.</p>\n<p>If you want to allocate the bucket yourself, use <a href=\"#docs-cli-axiom-create-unallocated-bucket\">axiom\ncreate-unallocated-bucket</a> instead, which won't\nautomatically allocate the bucket.</p>\n<p><code class=\"language-text\">size</code> is denominated in megabytes.</p>"}},{"node":{"frontmatter":{"title":"axiom alloc","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom alloc <span class=\"token punctuation\">[</span>bucketName<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>providerID<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Allocates a bucket to a particular provider.</p>\n<p>Usually you don't have to run this command because\n<a href=\"#docs-cli-axiom-create-bucket\">create-bucket</a> allocates a bucket for you.  This is\nuseful if there is a specific set of providers that you would like to use.</p>\n<p>This command is a synonym of <a href=\"#docs-cli-axiom-allocate\">axiom\nallocate</a> for those who prefer to avoid typing.</p>"}},{"node":{"frontmatter":{"title":"axiom create-provider","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom create-provider <span class=\"token punctuation\">[</span>capacity<span class=\"token punctuation\">]</span></code></pre></div>\n<p>This command creates a provider object on the blockchain. The\nblockchain will assign it a unique numerical id, and users creating a\nbucket can use it to specify which provider they want to store their\nfiles.</p>\n<p>You usually wouldn't want to do this yourself. If you want to run a\nfile hosting server, try the instructions for running\n<a href=\"https://github.com/axiom-org/axiom/tree/master/testnet\">hserver</a>. When\nyou run an hserver, it automatically creates a provider object if it\ndoesn't have one already. This CLI command is useful if you are\nwriting your own file hosting logic, or if you are debugging a buggy hserver.</p>"}},{"node":{"frontmatter":{"title":"axiom.createBucket","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> axiom<span class=\"token punctuation\">.</span><span class=\"token function\">createBucket</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">createBucket</code> creates a new bucket on behalf of the user of the application. A common pattern\nis that users can browse content for an application without creating a bucket to store\ntheir application files, but once they want to create an account, or create content of some\nkind, they create a bucket to store it.</p>\n<p><code class=\"language-text\">app</code> is a string that identifies the application, and <code class=\"language-text\">name</code> is a string that\nidentifies this particular bucket. If your application has usernames, it's reasonable to use\nusernames as bucket names, and to create the bucket at the time that the user is creating\nan account. Since the data is controlled by the end user who owns the\nbucket, different applications can share the same <code class=\"language-text\">app</code> string to\ninteract with the same data.</p>\n<p><code class=\"language-text\">size</code> is the size of the bucket in megabytes.</p>\n<p>For example, if we wrote an app named <code class=\"language-text\">blogpost</code> to let people make\nblog posts, we could let a user named <code class=\"language-text\">BradNelson</code> create an account\nwith:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">await</span> axiom<span class=\"token punctuation\">.</span><span class=\"token function\">createBucket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blogpost\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"BradNelson\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The first call to this method will cause a popup in the extension, to\nask the user for authorization to create the bucket.</p>\n<p>If you want to manipulate this bucket in the CLI later, the full name\nof the bucket is the app name and the bucket name joined by a\ncolon. So in this case, it would be <code class=\"language-text\">blogpost:BradNelson</code>.</p>\n<p><code class=\"language-text\">createBucket</code> throws an error if bucket creation does not\nsucceed. This usually means the bucket already exists, your connection\nto the internet failed, or the user rejected this request.</p>\n<p>If you have a question about the <code class=\"language-text\">Bucket</code> class that isn't answered by\nthis documentation, you can check out its <a href=\"https://github.com/axiom-org/axiom/blob/master/ts/src/browser/Bucket.ts\">source code on GitHub</a>.</p>"}},{"node":{"frontmatter":{"title":"axiom deallocate","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom deallocate <span class=\"token punctuation\">[</span>bucketName<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>providerID<span class=\"token punctuation\">]</span></code></pre></div>\n<p>The long form of <a href=\"#docs-cli-axiom-dealloc\">axiom dealloc</a> for those who prefer to type more.</p>"}},{"node":{"frontmatter":{"title":"axiom dealloc","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom dealloc <span class=\"token punctuation\">[</span>bucketName<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>providerID<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Deallocates a bucket from a particular provider.</p>\n<p>You might want to run this command if you own a bucket, and a particular provider has\nbeen performing poorly. Axiom doesn't enforce an SLA through the\nblockchain mechanisms itself. So if a provider is not providing good\nservice, you can deallocate your buckets from one provider and\nreallocate them to another.</p>\n<p>You also might want to run this commend if you are running a hosting\nprovider, and you discover a particular bucket contains content that\nyou don't want to be hosting. Perhaps it's illegal in your\njurisdiction, or you just don't like it for whatever\nreason. Deallocating the bucket means you aren't obliged to host it\nany more.</p>\n<p>This command is a synonym of <a href=\"#docs-cli-axiom-deallocate\">axiom\ndeallocate</a> for those who prefer not to\nspell out whole words.</p>"}},{"node":{"frontmatter":{"title":"axiom create-unallocated-bucket","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom create-unallocated-bucket <span class=\"token punctuation\">[</span>bucketName<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>size<span class=\"token punctuation\">]</span></code></pre></div>\n<p><code class=\"language-text\">axiom create-unallocated-bucket</code> creates a new bucket with no providers. This is useful if you wish\nto use a specific set of providers, and manually allocate them yourself later. But usually\nyou just want to use <a href=\"#docs-cli-axiom-create-bucket\">axiom create-bucket</a>.</p>\n<p><code class=\"language-text\">size</code> is denominated in megabytes.</p>"}},{"node":{"frontmatter":{"title":"axiom deploy","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom deploy <span class=\"token punctuation\">[</span>directory<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>bucketName<span class=\"token punctuation\">]</span></code></pre></div>\n<p>This command is a synonym of <a href=\"#docs-cli-axiom-upload\">axiom\nupload</a>.</p>\n<p>It's a bit more logical to have the\ncommands named \"upload\" and \"download\" so that the names are kind of\nparallel to each other. But when you're building an application, the\ntypical usage pattern is to write some code, and then when you're\nready, you deploy that code to production to have the application go\nlive. So it's kind of common to call this \"deploy\" in a command-line\ntool. Anyway, in a fit of indecisiveness we left both commands in the CLI.</p>"}},{"node":{"frontmatter":{"title":"axiom delete-bucket","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom delete-bucket <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span></code></pre></div>\n<p>If you created a bucket that you don't want any more, you can use this command to delete it.</p>"}},{"node":{"frontmatter":{"title":"axiom download","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom download <span class=\"token punctuation\">[</span>bucketName<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Downloads the contents of a bucket to a newly-created directory with\nthe same name as the bucket, in the current working directory.</p>"}},{"node":{"frontmatter":{"title":"axiom generate","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom generate</code></pre></div>\n<p>This command generates a keypair file containing both private key and\npublic key that correspond to a passphrase. You don't need this just\nto use the CLI, but you will need this keypair file in order to run\nyour own hosting server. If you're interested in running your own\nhosting server, check out the <a href=\"https://github.com/axiom-org/axiom/tree/master/testnet\">instructions\nhere</a>.</p>"}},{"node":{"frontmatter":{"title":"axiom get-account","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom get-account <span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Shows the account data for a user. This includes information like\ntheir account balance and how much total storage they are using.</p>"}},{"node":{"frontmatter":{"title":"axiom get-buckets","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom get-buckets <span class=\"token punctuation\">[</span>owner<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>provider<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>Shows which buckets match a query. You can either find buckets owned by a particular\nuser, or buckets that are being hosted by a particular provider.</p>\n<p>If you don't provide any arguments, this command will show you all buckets that you own.</p>"}},{"node":{"frontmatter":{"title":"axiom get-private-key","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom get-private-key</code></pre></div>\n<p>Prints out your private key. The CLI stores login data in\n<code class=\"language-text\">~/.axiom/config.json</code>, so this could already be accessed there. This\nCLI command just makes it a bit more convenient.</p>"}},{"node":{"frontmatter":{"title":"axiom get-bucket","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom get-bucket <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Shows information about a bucket. In particular this tells you the magnet URI you need\nto access the bucket's content, the owner of the bucket, and which providers are\nresponsible for the bucket.</p>"}},{"node":{"frontmatter":{"title":"axiom get-providers","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom get-providers <span class=\"token punctuation\">[</span>owner<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>user<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>bucket<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>available<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>amount<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>id<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>Shows which providers match a query. You can find buckets owned by a\nparticular user, which providers are hosting a particular bucket, or\nproviders with a certain amount of available space.</p>"}},{"node":{"frontmatter":{"title":"axiom.getBucket","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> axiom<span class=\"token punctuation\">.</span><span class=\"token function\">getBucket</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">getBucket</code> retrieves a <code class=\"language-text\">Bucket</code> object that contains information for\na bucket from the blockchain. It does not download\nthe actual contents of the bucket. If you want that, you should\nsubsequently call <a href=\"#docs-bucket-download\">bucket.download</a>.</p>\n<p><code class=\"language-text\">app</code> and <code class=\"language-text\">name</code> are the same parameters used when the <a href=\"#docs-axiom-createbucket\">bucket was\ncreated</a>.</p>\n<p>No permissions are needed to get a bucket, since the data is public data.</p>"}},{"node":{"frontmatter":{"title":"axiom.getAccount","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> axiom<span class=\"token punctuation\">.</span><span class=\"token function\">getAccount</span><span class=\"token punctuation\">(</span>publicKey<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">getAccount</code> fetches account data for a public key. The account is a plain object with the fields:</p>\n<ul>\n<li>\n<p><code class=\"language-text\">owner</code> is the public key who owns the account</p>\n</li>\n<li>\n<p><code class=\"language-text\">sequence</code> is the sequence id of the last operation authorized by this account. The blockchain resolution logic uses this to prevent replay attacks.</p>\n</li>\n<li>\n<p><code class=\"language-text\">balance</code> is the current balance of this account.</p>\n</li>\n<li>\n<p><code class=\"language-text\">storage</code> is how much total bucket size, in megabytes, this account is currently storing.</p>\n</li>\n</ul>\n<p>No permissions are needed to fetch account data for a public key, since the information is public.</p>"}},{"node":{"frontmatter":{"title":"axiom get-provider","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom get-provider <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Shows information about a particular provider. In particular this tells you the owner of the provider, and which buckets this provider is hosting.</p>"}},{"node":{"frontmatter":{"title":"axiom.getPublicKey","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> axiom<span class=\"token punctuation\">.</span><span class=\"token function\">getPublicKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">getPublicKey</code> gets the current user's public key from the extension.</p>\n<p>For privacy, the extension won't just tell every application your public key. The first time\nthis is called, a popup opens that asks the user if they would like to grant this website\nknowledge of their public key. In order to make sure this popup is shown, <code class=\"language-text\">getPublicKey</code>\nshould be called directly in response to the user interacting with an input element, like\na login button.</p>\n<p>If the user has already granted access, however, <code class=\"language-text\">getPublicKey</code> will\nreturn successfully without further authorization.</p>"}},{"node":{"frontmatter":{"title":"axiom logout","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom <span class=\"token function\">logout</span></code></pre></div>\n<p>Logs you out. After you log out, none of your keypair information is\nleft on the local machine.</p>\n<p>Once you log out, you might want to use <a href=\"#docs-cli-axiom-login\">axiom login</a> to log back in.</p>"}},{"node":{"frontmatter":{"title":"axiom login","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom login</code></pre></div>\n<p>Asks you for a passphrase and tells you your corresponding public key.</p>\n<p>Most commands, if you aren't already logged in, will just ask you to\nlog in. So you usually don't need to run this explicitly.</p>\n<p>There is no associated \"username\" with your passphrase. The passphrase\nis all you need to gain access to the user account. The string username\nin the Axiom system is just the public key associated with your\nkeypair. So your passphrase by itself should be a very unique phrase.</p>\n<p>The CLI stores its configuration information in\n<code class=\"language-text\">~/.axiom/config.json</code>. The <code class=\"language-text\">login</code> command will populate that file,\nand subsequent commands will use the information in that file. You\nshould keep this file secure, just like you would with your SSH keys.</p>\n<p>If you regret logging in, you can use <a href=\"#docs-cli-axiom-logout\">axiom\nlogout</a> to log back out.</p>"}},{"node":{"frontmatter":{"title":"axiom send","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom send <span class=\"token punctuation\">[</span>recipient<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>amount<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Sends currency to another user.</p>\n<p>The recipient here is the public key that is provided when you\ninitially generate an account, or that is included on bucket and\nprovider information. Public keys start with <code class=\"language-text\">0x</code>.</p>\n<p>Be careful when you use this, because when you send currency, there is\nno way to undo the transaction.</p>"}},{"node":{"frontmatter":{"title":"axiom set-magnet","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom set-magnet <span class=\"token punctuation\">[</span>bucketName<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>magnet<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Updates the magnet URI stored for a particular bucket.</p>\n<p>The file hosting software also runs WebTorrent trackers which will create magnet URIs for bucket contents. So normally you wouldn't want to set a magnet directly; you would just use the <a href=\"#docs-cli-axiom-upload\">axiom upload</a> command which does this for you.</p>\n<p>This is useful if you have created a magnet URI in some other way and\nwant your bucket to use it instead. Like if you have a WebTorrent\ntracker with some extra functionality that you want. But these are\nsomewhat obscure cases, so it's rare you would want to do this.</p>"}},{"node":{"frontmatter":{"title":"axiom signup","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom signup</code></pre></div>\n<p>During the developer beta, we are giving away currency so that people\ncan build applications on the system. This command is how you\ncollect. First, sign up for the\n<a href=\"https://axiom.org/newsletter\">newsletter</a>. Then, run this\ncommand. You will have to enter a token that gets emailed to you, and\nthen you will have an account set up with enough currency to build an\napplication.</p>\n<p>Maybe it's a little tacky to make you sign up for the newsletter to\ntry this out. Sorry! At least it makes it a little harder for spammers\nto take up all the capacity in the system.</p>\n<p>Speaking of spammers... when we launch the main net, we plan to keep running applications\noperational and transfer them from the testnet to the main net. But\nwe don't plan to keep account balances in place. So there's no point in\nspamming this system to get hundreds of developer accounts. The only\nthing this currency is getting you is capacity on the development\nsystem.</p>"}},{"node":{"frontmatter":{"title":"axiom upload","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom upload <span class=\"token punctuation\">[</span>directory<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>bucketName<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Uploads the contents of a local directory to a decentralized\nbucket. The bucket must already have been created, and you must own\nit.</p>"}},{"node":{"frontmatter":{"title":"axiom version","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom version</code></pre></div>\n<p>Prints out which version of the Axiom CLI you are using.</p>\n<p>If you are debugging an Axiom CLI installation issue, you might also find <a href=\"#docs-cli-axiom-which\">axiom which</a> to be useful.</p>"}},{"node":{"frontmatter":{"title":"bucket.download","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> bucket<span class=\"token punctuation\">.</span><span class=\"token function\">download</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">download()</code> downloads the entire contents of a bucket to the local browser.</p>\n<p>You don't necessarily need to call this, because the asynchronous\ngetter functions like <a href=\"#docs-bucket-getjson\">getJSON</a> will download as\nthey need to anyway. But if you know your application is going to want\nthis information later, you can call <code class=\"language-text\">download()</code> as soon as the\nbucket is acquired, to begin the download immediately.</p>"}},{"node":{"frontmatter":{"title":"bucket.getFile","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> bucket<span class=\"token punctuation\">.</span><span class=\"token function\">getFile</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">getFile</code> returns a standard <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/File\">File</a> object given a path within a bucket.</p>\n<p>If the file isn't available locally, this will download the file and\nthen return it. If the bucket has already been entirely downloaded\nwith <a href=\"#docs-bucket-download\">bucket.download</a>, the file will be\nreturned from the cache.</p>\n<p>In general, a <code class=\"language-text\">File</code> object is the most standard form for files in a\nbrowser, but it isn't very convenient for most common operations. If you're\ninteracting with application data, you may find it more helpful to use\n<a href=\"#docs-bucket-getjson\">bucket.getJSON</a> or <a href=\"#docs-bucket-gettext\">bucket.getText</a>.</p>"}},{"node":{"frontmatter":{"title":"axiom which","section":"cli"},"html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom <span class=\"token function\">which</span></code></pre></div>\n<p>This command just tells you where the file is that is running the CLI itself. It is useful if you are trying to debug a problem about how exactly your CLI is installed.</p>"}},{"node":{"frontmatter":{"title":"bucket.getJSON","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> bucket<span class=\"token punctuation\">.</span><span class=\"token function\">getJSON</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">getJSON</code> returns the result of JSON-parsing the file stored at <code class=\"language-text\">path</code>. It will throw an error if that file doesn't contain valid JSON.</p>\n<p>This is often more useful for accessing application data than using <a href=\"#docs-bucket-getfile\">getFile</a> to access a file directly. But it's just a simple wrapper around <code class=\"language-text\">getFile</code>.</p>"}},{"node":{"frontmatter":{"title":"bucket.getText","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> bucket<span class=\"token punctuation\">.</span><span class=\"token function\">getText</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> encoding<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">getText</code> returns the text content for a file stored at <code class=\"language-text\">path</code>. If you don't provide an encoding, the file is assumed to be <code class=\"language-text\">utf-8</code>.</p>\n<p>This is often more useful for accessing application data than using <a href=\"#docs-bucket-getfile\">getFile</a> to access a file directly. But it's just a simple wrapper around <code class=\"language-text\">getFile</code>.</p>"}},{"node":{"frontmatter":{"title":"bucket.getPaths","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> bucket<span class=\"token punctuation\">.</span><span class=\"token function\">getPaths</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">getPaths</code> returns a list of paths for every file stored in this bucket.</p>\n<p>Directories aren't stored recursively in a bucket. They are just stored as long pathnames that happen to have slashes in them. So if your bucket contains two directories, each with two files, you might get a response to <code class=\"language-text\">getPaths</code> that looks like:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span> <span class=\"token string\">\"foo/1.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"foo/2.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bar/1.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bar/2.txt\"</span> <span class=\"token punctuation\">]</span></code></pre></div>"}},{"node":{"frontmatter":{"title":"bucket.magnet","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">bucket<span class=\"token punctuation\">.</span>magnet</code></pre></div>\n<p>This field provides access to a <a href=\"https://en.wikipedia.org/wiki/Magnet_URI_scheme\">magnet URI</a> for the <a href=\"https://webtorrent.io/docs\">WebTorrent protocol</a>. You can use this to download the\ncurrent contents of a bucket if you don't want to use this API.</p>\n<p>In most cases, you should be able to use getters on the <code class=\"language-text\">Bucket</code> object instead of using\nthe magnet directly.</p>\n<p>Don't write to this field.</p>"}},{"node":{"frontmatter":{"title":"bucket.name","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">bucket<span class=\"token punctuation\">.</span>name</code></pre></div>\n<p>This field provides the full name of the bucket, which is the app name\nand the bucket name separated by a colon.</p>\n<p>This field is mostly useful for debugging. You usually won't need to\nuse it in code because all the data access for the bucket can happen\nvia the <code class=\"language-text\">Bucket</code> object. But if you want to inspect a bucket using the\nCLI, you'll need its full name.</p>\n<p>Don't write to this field.</p>"}},{"node":{"frontmatter":{"title":"bucket.owner","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">bucket<span class=\"token punctuation\">.</span>owner</code></pre></div>\n<p>This field provides access to the public key of the user that owns this bucket.</p>\n<p>In particular, if <a href=\"#docs-axiom-getpublickey\">axiom.getPublicKey()</a> doesn't match,\nthen this user won't be able to write to this bucket.</p>"}},{"node":{"frontmatter":{"title":"bucket.setJSON","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">bucket<span class=\"token punctuation\">.</span><span class=\"token function\">setJSON</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> object<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">setJSON</code> JSON-encodes a provided object, and stores the result in a file at <code class=\"language-text\">path</code>.</p>\n<p>Like <a href=\"#docs-bucket-setfile\">setFile</a>, this function only changes the content of the bucket locally. You have to call <a href=\"#docs-bucket-upload\">bucket.upload</a> to upload the new contents of the bucket when you are ready to save it.</p>\n<p>It's a good idea to end files with <code class=\"language-text\">.json</code> when they are storing JSON data. It isn't required, though.</p>"}},{"node":{"frontmatter":{"title":"bucket.setFile","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">bucket<span class=\"token punctuation\">.</span><span class=\"token function\">setFile</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">setFile</code> stores a file into a bucket at <code class=\"language-text\">path</code>.</p>\n<p>This function only changes the content of the bucket locally. You have to call <a href=\"#docs-bucket-upload\">bucket.upload</a> to upload the new contents of the bucket when you are ready to save it.</p>\n<p>In general, a <code class=\"language-text\">File</code> object is the most standard form for files in a\nbrowser, but it isn't very convenient for most common operations. If you're\nstoring application data, you may find it more helpful to use\n<a href=\"#docs-bucket-setjson\">bucket.setJSON</a> or <a href=\"#docs-bucket-settext\">bucket.setText</a>.</p>"}},{"node":{"frontmatter":{"title":"bucket.size","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">bucket<span class=\"token punctuation\">.</span>size</code></pre></div>\n<p>This field tells you the size of the bucket, in megabytes. It is always an integer; you can't have buckets that are half a megabyte in size.</p>\n<p>The size of a bucket is an upper limit. Usually the total size of all files in a bucket is smaller than the bucket size.</p>\n<p>Don't write to this field.</p>"}},{"node":{"frontmatter":{"title":"bucket.setText","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">bucket<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">setText</code> stores the provided text in a file at <code class=\"language-text\">path</code>.</p>\n<p>It only supports <code class=\"language-text\">utf-8</code> encoding. If you want to use a different encoding, or if you want to store nontextual data, try using <a href=\"#docs-bucket-setfile\">setFile</a> instead.</p>\n<p>You have to call <a href=\"#docs-bucket-upload\">bucket.upload</a> to upload the new contents of the bucket when you are ready to save it.</p>\n<p>It's a good idea to end files with <code class=\"language-text\">.txt</code> when they are storing plain text data. It isn't required, though.</p>"}},{"node":{"frontmatter":{"title":"bucket.upload","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> bucket<span class=\"token punctuation\">.</span><span class=\"token function\">upload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">upload</code> uploads new content to a bucket.</p>\n<p>The typical usage pattern is first to fetch information for a bucket using <a href=\"#docs-bucket-download\">bucket.download()</a>. Then, the user can access data in the bucket with getters like <a href=\"#docs-bucket-getjson\">bucket.getJSON</a> and modify it with setters like <a href=\"#docs-bucket-setjson\">bucket.setJSON</a>. Once some modifications to the bucket have been made, it can be uploaded with <code class=\"language-text\">bucket.upload</code>.</p>"}},{"node":{"frontmatter":{"title":"CLI Overview","section":"cli"},"html":"<p>This section provides a reference to all of the CLI commands.</p>\n<p>The CLI is distributed through the <code class=\"language-text\">axiom-cli</code> npm package. You can\ninstall the CLI using <a href=\"https://www.npmjs.com/get-npm\">npm</a> or\n<a href=\"https://yarnpkg.com/\">yarn</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g axiom-cli</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> global <span class=\"token function\">add</span> axiom-cli</code></pre></div>\n<p>The general format of CLI commands is:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom command-name argument-1 argument-2 <span class=\"token punctuation\">[</span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span></code></pre></div>\n<p>If you run a command with no arguments, you'll get a brief usage\nmessage.</p>\n<p>Anything that can be done through the CLI can also be done through\nHTTP. The CLI source code is <a href=\"https://github.com/axiom-org/axiom/blob/master/ts/src/node/cli-main.ts\">on\nGitHub</a>\nso if some of its behavior is insufficiently documented, or it's\nunclear how to achieve it programmatically, you can check there.</p>\n<p>Several of the CLI commands use bucket names. A bucket name can\noptionally have an application tag on it. If the application tag is\nomitted, the application is considered to be <code class=\"language-text\">www</code>. For example, in the\nbucket name <code class=\"language-text\">foobar:bazqux</code>, <code class=\"language-text\">foobar</code> is the application tag and\n<code class=\"language-text\">bazqux</code> is the name of the bucket itself.</p>"}},{"node":{"frontmatter":{"title":"Here Is Some Morem Ipsum","section":"morem-ipsum"},"html":"<p>Hum diddly hum</p>"}},{"node":{"frontmatter":{"title":"Installing the CLI","section":"start"},"html":"<p>There are several different ways to interact with Axiom.\nServers running the Axiom blockchain and hosting Axiom\nfiles interact with each other through the wire protocol.\nApplication code typically interacts with Axiom through\nthe JavaScript Axiom client. During the development\nprocess, the most convenient way to interact with Axiom is\ntypically through the CLI.</p>\n<p>The CLI is tested on OS X and Linux. It might also work in Windows.</p>\n<p>You can install the CLI using <a href=\"https://www.npmjs.com/get-npm\">npm</a> or\n<a href=\"https://yarnpkg.com/\">yarn</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g axiom-cli</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> global <span class=\"token function\">add</span> axiom-cli</code></pre></div>"}},{"node":{"frontmatter":{"title":"Signing Up","section":"start"},"html":"<p>The Axiom system stores data in two different ways. The\nblockchain is replicated among every machine running\nAxiom. Storage space there is limited, but it is very\nreliable. Account data, like public keys to validate\nusers, and balances indicating how much cryptocurrency is\nowned by each account, is kept on the blockchain.</p>\n<p>File storage, on the other hand, is not replicated among\nevery machine running Axiom. Files stored on Axiom will\nonly be replicated to a few different machines. Only hash\nvalues of file content will be stored on the blockchain.</p>\n<p>To store any data in Axiom, you'll need to acquire some\ncryptocurrency, to pay for storage. To make this easier\nduring the beta period, we have a faucet set up to give\nout a small amount of currency to use for development.</p>\n<p>To sign up, first\n<a href=\"https://axiom.org/newsletter\">register your email here</a>.\nThen run this command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom signup youremail@example.com</code></pre></div>\n<p>You will have to enter a token that was emailed to you, so\nplease use a legitimate email address.</p>\n<p>The signup command will log in the CLI and generate a secure\npassphrase for you. Keep this somewhere secure.</p>\n<p>Once you complete the signup command, you should have\nenough money in your account to pay for the storage used\nin application development. To check your account balance,\nrun:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom status</code></pre></div>\n<p>Log in using the passphrase that the <code class=\"language-text\">signup</code> command generated.\nYou should see output that displays a balance greater than\nzero. Congratulations, you now own some of the Axiom cryptocurrency!</p>"}},{"node":{"frontmatter":{"title":"new Axiom()","section":"api"},"html":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Axiom <span class=\"token keyword\">from</span> <span class=\"token string\">\"axiom-api\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> axiom <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Axiom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>All access to the Axiom JavaScript API happens through an <code class=\"language-text\">Axiom</code>\nobject. You only need to create this\nonce for your application. It will internally handle caching and permissions.</p>\n<p>The constructor can take an options object, with the fields:</p>\n<ul>\n<li>\n<p><code class=\"language-text\">network</code> can be set to <code class=\"language-text\">&quot;local&quot;</code> to use a development blockchain\nyou are running locally on your own machine. The default is to use\nthe public network.</p>\n</li>\n<li>\n<p><code class=\"language-text\">verbose</code> can be set to <code class=\"language-text\">true</code> to log debugging messages to the\nconsole. By default Axiom shouldn't log unless there is an error.</p>\n</li>\n</ul>\n<p>If you have a question about the <code class=\"language-text\">Axiom</code> class that isn't answered by\nthis documentation, you can check out its <a href=\"https://github.com/axiom-org/axiom/blob/master/ts/src/browser/AxiomAPI.ts\">source code on GitHub</a>.</p>"}},{"node":{"frontmatter":{"title":"Storing Files","section":"start"},"html":"<p>Now that you've created a bucket, you can upload files to that\nbucket. The simplest way to upload files is to use the <code class=\"language-text\">axiom upload</code>\ncommand to upload the contents of a local directory to a bucket:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> ~/my-cool-example\n<span class=\"token function\">cd</span> ~/my-cool-example\n<span class=\"token keyword\">echo</span> <span class=\"token string\">\"hello decentralized world\"</span> <span class=\"token operator\">></span> index.html\naxiom upload <span class=\"token keyword\">.</span> my-cool-example</code></pre></div>\n<p>When you run an upload, the files are transferred to the\nhosting providers via\n<a href=\"https://github.com/webtorrent/webtorrent\">WebTorrent</a>. The blockchain\nonly contains a single hash value encoded in a <a href=\"https://en.wikipedia.org/wiki/Magnet_URI_scheme\">magnet\nURI</a>, so that other\nusers can verify the contents of the bucket.</p>\n<p>Using the WebTorrent protocol for uploads and downloads means that the\ncosts of file hosting for providers don't scale linearly according to\nthe number of downloads, and can be amortized into the base cost of\nthe bucket. When you update the blockchain, you do have to pay a\nfee. The CLI by default attempts to use a 0-fee transaction. Since the\nblockchain uses the <a href=\"http://www.scs.stanford.edu/~dm/blog/simplified-scp.html\">Stellar Consensus\nProtocol</a>,\nhopefully these fees can stay very small over time even as blockchain\nusage increases.</p>\n<p>Now that we've uploaded content to a bucket, let's download it to make\nsure it's working.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> ~/testdir\n<span class=\"token function\">cd</span> ~/testdir\naxiom download my-cool-example</code></pre></div>\n<p>You should be able to inspect the newly-created <code class=\"language-text\">~/testdir</code> directory\nto see a copy of your uploaded file.</p>"}},{"node":{"frontmatter":{"title":"Here Is Some Lorem Ipsum","section":"lorem-ipsum"},"html":"<p>Blah blobbity blah</p>"}},{"node":{"frontmatter":{"title":"Introduction","section":"start"},"html":"<p>Axiom is a platform for building decentralized\napplications. It is also a cryptocurrency. If you've used\napplication platforms like Heroku or App Engine before,\nyou'll find parts of this familiar. If you've developed an\napplication using other cryptocurrencies like Ethereum\nbefore, you'll find different parts of this familiar.</p>\n<p>Currently, Axiom primarily targets web applications built\nin JavaScript. If you know how to make a simple website,\nyou'll be able to deploy a simple decentralized site. To\nbuild a more complicated application, you'll probably want\nto be familiar with a JavaScript framework like React or\nVue.</p>\n<p>The best way to learn about the Axiom system is\nto build a simple application on it. The \"Getting Started\"\nsection of this documentation will explain how to get an account set up and how to deploy\na simple static site to Axiom. The \"Building Applications\" section will explain how to build a\nslightly more complicated application. If you're\ninterested in learning more, the later sections will go\ninto more detail.</p>\n<p>Good luck!</p>"}},{"node":{"frontmatter":{"title":"Creating a Bucket","section":"start"},"html":"<p>To understand file storage on Axiom, it is helpful to understand\nthe concepts of buckets and hosting providers. An Axiom bucket is similar to\nan Amazon S3 bucket. A bucket can hold many files, and a user can own\nmany buckets. Each bucket has a capacity for how many files it can\nstore. One of your buckets could hold the static content for a web\napplication you are deploying, or it could hold the data for an\napplication you are using, or it could hold any sort of files you\nwould like to keep in decentralized storage.</p>\n<p>Data on the blockchain is replicated among every\nmachine running the blockchain. Data in a bucket is\nonly replicated among a few different hosting providers. This\nmakes it relatively inexpensive to store data in a bucket. With the\ndeveloper faucet, you should have enough to pay for about 100 megabytes\nof bucket storage.</p>\n<p>Let's make a bucket. Pick a unique name like\n\"my-cool-example\". Names are unique, so if you pick this exact one it\nprobably won't work because someone else will have gone through the\nexample. Bucket names also have to be at least six letters long.</p>\n<p>First, we have to create a new bucket. Let's pick a size of 1 megabyte\nbecause we're just using this as an example:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">axiom create-bucket my-cool-example 1</code></pre></div>\n<p>You should see output that looks like:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">created bucket: www:my-cool-example\nallocated bucket to 1 provider\nallocated bucket to 2 providers\nallocated bucket to 3 providers\nallocated bucket to 4 providers</code></pre></div>\n<p>The <code class=\"language-text\">www</code> is the application tag for this bucket. It defaults to <code class=\"language-text\">www</code>\nwhich indicates that these files are intended for web access.</p>\n<p>The <code class=\"language-text\">create-bucket</code> command will automatically allocate the bucket to a\nfew hosting providers for you. Either the owner of a bucket or the\nhosting provider can deallocate the bucket at any time. As a developer, you\nmight want to reallocate a bucket elsewhere if a hosting provider is providing\na poor service level. As a hosting provider, you might want to\ndeallocate a bucket if you discover that it is hosting content that\nyou don't want to be hosting. Providers are never forced to host\nparticular files.</p>"}},{"node":{"frontmatter":{"title":"React Hello World","section":"build"},"html":"<p>XXX</p>"}},{"node":{"frontmatter":{"title":"Decentralized Websites","section":"start"},"html":"<p>Any bucket can be used to upload and download files. Since we stored\nthis data in a bucket with the application tag <code class=\"language-text\">www</code>, the convention\nis that these files are meant to be used as a website, with the root\npage in <code class=\"language-text\">index.html</code>.</p>\n<p>Normal websites are based on a domain name which is found through a\ncentralized <a href=\"https://en.wikipedia.org/wiki/Domain_name_registry\">domain name\nregistry</a>. Since an\nAxiom application is based on files that are available through\ndecentralized buckets, it can be accessed without depending on this\ncentralized registry.</p>\n<p>The easiest way to do so is to download the <a href=\"https://chrome.google.com/webstore/detail/axiom-authenticator/gpogeambflkelepdkgnpaicifglhlgbb\">Axiom Authenticator\nChrome extension</a>. When\nyou </p>"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}